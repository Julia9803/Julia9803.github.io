<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Julia&#39;s BLOG</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-01-23T11:03:16.784Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Julia</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>python常用语句</title>
    <link href="http://yoursite.com/2019/01/23/python%E5%B8%B8%E7%94%A8%E8%AF%AD%E5%8F%A5/"/>
    <id>http://yoursite.com/2019/01/23/python常用语句/</id>
    <published>2019-01-23T10:49:15.000Z</published>
    <updated>2019-01-23T11:03:16.784Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-Pandas-int-to-string"><a href="#1-Pandas-int-to-string" class="headerlink" title="1. Pandas int to string"></a>1. Pandas int to string</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">'A'</span>].apply(str)</span><br><span class="line">df.applymap(str)</span><br></pre></td></tr></table></figure><h4 id="2-Pandas-去掉数据中空白"><a href="#2-Pandas-去掉数据中空白" class="headerlink" title="2. Pandas 去掉数据中空白"></a>2. Pandas 去掉数据中空白</h4><p>Series.str.strip(to_strip=None)去除两边空白<br>Series.str.lstrip(to_strip=None)去除左边空白<br>Series.str.rstrip(to_strip=None)去除右边空白</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'   spacious   '</span>.strip()</span><br><span class="line"><span class="string">'spacious'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'www.example.com'</span>.strip(<span class="string">'cmowz.'</span>)</span><br><span class="line"><span class="string">'example'</span></span><br></pre></td></tr></table></figure><h4 id="3-Pandas-split"><a href="#3-Pandas-split" class="headerlink" title="3. Pandas split"></a>3. Pandas split</h4><p><img src="https://upload-images.jianshu.io/upload_images/8612260-bfb50753244ea5a9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/727" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;1-Pandas-int-to-string&quot;&gt;&lt;a href=&quot;#1-Pandas-int-to-string&quot; class=&quot;headerlink&quot; title=&quot;1. Pandas int to string&quot;&gt;&lt;/a&gt;1. Pandas int to st
      
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>常用命令</title>
    <link href="http://yoursite.com/2019/01/21/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2019/01/21/常用命令/</id>
    <published>2019-01-21T13:55:01.000Z</published>
    <updated>2019-01-23T11:10:44.056Z</updated>
    
    <content type="html"><![CDATA[<h4 id="SSH远程连接服务器"><a href="#SSH远程连接服务器" class="headerlink" title="SSH远程连接服务器"></a>SSH远程连接服务器</h4><p>ssh -p 端口号 username@服务器IP</p><h4 id="SSH本地开启远程jupyter-notebook"><a href="#SSH本地开启远程jupyter-notebook" class="headerlink" title="SSH本地开启远程jupyter notebook"></a>SSH本地开启远程jupyter notebook</h4><p>ssh -p 端口号 username@服务器IP -N -L localhost:8889:localhost:8888</p><p>注：服务器jupyter notebook的端口号8888映射到本地端口号8889</p><p>第一次使用时，需要将服务器jupyter notebook链接的token输入到本地窗口中</p><h4 id="SCP上传与下载文件夹"><a href="#SCP上传与下载文件夹" class="headerlink" title="SCP上传与下载文件夹"></a>SCP上传与下载文件夹</h4><h5 id="1-本地上传到远端服务器"><a href="#1-本地上传到远端服务器" class="headerlink" title="1. 本地上传到远端服务器"></a>1. 本地上传到远端服务器</h5><p>scp -r 本地文件夹绝对路径 username@服务器IP:服务器绝对路径</p><h5 id="2-远端服务器下载到本地"><a href="#2-远端服务器下载到本地" class="headerlink" title="2. 远端服务器下载到本地"></a>2. 远端服务器下载到本地</h5><p>scp -r username@服务器IP:服务器绝对路径 本地绝对路径</p><p>注：服务器端口不是默认端口22的，要在scp后加 -P 端口号 （P大写）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;SSH远程连接服务器&quot;&gt;&lt;a href=&quot;#SSH远程连接服务器&quot; class=&quot;headerlink&quot; title=&quot;SSH远程连接服务器&quot;&gt;&lt;/a&gt;SSH远程连接服务器&lt;/h4&gt;&lt;p&gt;ssh -p 端口号 username@服务器IP&lt;/p&gt;
&lt;h4 id=&quot;
      
    
    </summary>
    
    
      <category term="常用命令行" scheme="http://yoursite.com/tags/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>机器学习笔记(1)-Rule Learning</title>
    <link href="http://yoursite.com/2018/09/05/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1/"/>
    <id>http://yoursite.com/2018/09/05/机器学习笔记-1/</id>
    <published>2018-09-05T04:48:52.000Z</published>
    <updated>2018-09-05T03:18:25.744Z</updated>
    
    <content type="html"><![CDATA[<p>本文所做数据处理为计算entropy(熵)，应用简易的Rule Learning(规则学习)算法。</p><p>所用数据为：</p><p>sailing-custom-python.tab</p><p>zoo-python.tab</p><h4 id="1-Import-各种包"><a href="#1-Import-各种包" class="headerlink" title="1. Import 各种包"></a>1. Import 各种包</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> math</span><br></pre></td></tr></table></figure><h4 id="2-用pandas包load数据"><a href="#2-用pandas包load数据" class="headerlink" title="2. 用pandas包load数据"></a>2. 用pandas包load数据</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sailData = pd.read_table(<span class="string">'sailing-custom-python.tab'</span>)</span><br><span class="line">zooData = pd.read_table(<span class="string">'zoo-python.tab'</span>)</span><br><span class="line">zooData = zooData.drop(columns=<span class="string">'name'</span>)</span><br></pre></td></tr></table></figure><h4 id="3-计算entropy-熵-的方法"><a href="#3-计算entropy-熵-的方法" class="headerlink" title="3. 计算entropy(熵)的方法"></a>3. 计算entropy(熵)的方法</h4><p>公式参考：<img src="https://s1.ax1x.com/2018/09/05/ipwAEt.png" alt="ipwAEt.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">entropy</span><span class="params">(data, target)</span>:</span></span><br><span class="line">    count = pd.value_counts(data[target])</span><br><span class="line">    dataSize = data[target].size</span><br><span class="line">    entropyValue = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> value <span class="keyword">in</span> count:</span><br><span class="line">        proportion = value/dataSize</span><br><span class="line">        entropyValue -= proportion * math.log(proportion, <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">return</span> entropyValue</span><br></pre></td></tr></table></figure><p>测试方法体是否能运行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">entropy(sailData, <span class="string">'Sail'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">entropy(zooData, <span class="string">'type'</span>)</span><br></pre></td></tr></table></figure><p>输出：</p><p>0.9975025463691153</p><p>2.390559682294039</p><p>方法正常执行</p><h4 id="4-计算最多数的col名，并返回"><a href="#4-计算最多数的col名，并返回" class="headerlink" title="4. 计算最多数的col名，并返回"></a>4. 计算最多数的col名，并返回</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">majority_class</span><span class="params">(data, targetClass)</span>:</span></span><br><span class="line">    counts = pd.value_counts(data[targetClass])</span><br><span class="line">    max_name = counts.idxmax()</span><br><span class="line">    <span class="keyword">return</span> max_name</span><br></pre></td></tr></table></figure><h4 id="5-简易规则学习方法"><a href="#5-简易规则学习方法" class="headerlink" title="5. 简易规则学习方法"></a>5. 简易规则学习方法</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">simpler_rule_learner</span><span class="params">(data, target)</span>:</span></span><br><span class="line">    <span class="keyword">while</span> data.shape[<span class="number">0</span>] &gt; <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">if</span> entropy(data, target) == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">print</span> (<span class="string">"otherwise =&gt;"</span>, majority_class(data,target))</span><br><span class="line">            data = data.iloc[<span class="number">0</span>:<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            best_entropy = entropy(data, target)</span><br><span class="line">            best_attribute = <span class="string">''</span></span><br><span class="line">            best_value = <span class="string">''</span></span><br><span class="line">            best_data=data</span><br><span class="line">    </span><br><span class="line">            <span class="keyword">for</span> attribute <span class="keyword">in</span> data:</span><br><span class="line">                <span class="keyword">for</span> value <span class="keyword">in</span> data[attribute]:</span><br><span class="line">                    data2 = data.loc[data[attribute]==value]</span><br><span class="line">                    </span><br><span class="line">                    <span class="keyword">if</span> entropy(data2, target) &lt; best_entropy:</span><br><span class="line">                        best_entropy = entropy(data2, target)</span><br><span class="line">                        best_attribute = attribute</span><br><span class="line">                        best_value = value</span><br><span class="line">                       </span><br><span class="line">                        best_data=data2</span><br><span class="line">            </span><br><span class="line">            print(best_attribute, <span class="string">"="</span>, best_value, <span class="string">"=&gt;"</span>, majority_class(best_data,target))</span><br><span class="line">            data = data.loc[data[best_attribute] != best_value]</span><br></pre></td></tr></table></figure><p>测试方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">simpler_rule_learner(sailData, <span class="string">'Sail'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Company = big =&gt; yes</span><br><span class="line">Outlook = rainy =&gt; no</span><br><span class="line">Company = med =&gt; yes</span><br><span class="line">Sailboat = small =&gt; yes</span><br><span class="line">otherwise =&gt; no</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">simpler_rule_learner(zooData, <span class="string">'type'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">feathers = Yes =&gt; bird</span><br><span class="line">milk = Yes =&gt; mammal</span><br><span class="line">hair = Yes =&gt; insect</span><br><span class="line">airborne = Yes =&gt; insect</span><br><span class="line">fins = Yes =&gt; fish</span><br><span class="line">legs = 8.0 =&gt; invertebrate</span><br><span class="line">eggs = No =&gt; reptile</span><br><span class="line">breathes = No =&gt; invertebrate</span><br><span class="line">aquatic = Yes =&gt; amphibian</span><br><span class="line">predator = Yes =&gt; reptile</span><br><span class="line">backbone = Yes =&gt; reptile</span><br><span class="line">legs = 6.0 =&gt; insect</span><br><span class="line">otherwise =&gt; invertebrate</span><br></pre></td></tr></table></figure><p>至此简易规则学习方法已经可以正确输出结果。</p><h4 id="注：筛选某一列中值为特定的行，方法如下-（data-loc用法）"><a href="#注：筛选某一列中值为特定的行，方法如下-（data-loc用法）" class="headerlink" title="注：筛选某一列中值为特定的行，方法如下 （data.loc用法）"></a>注：筛选某一列中值为特定的行，方法如下 （data.loc用法）</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">print(sailData)</span><br><span class="line">print()</span><br><span class="line">attribute = <span class="string">'Outlook'</span></span><br><span class="line">value = <span class="string">'rainy'</span></span><br><span class="line">print(sailData.loc[sailData[attribute]==value])</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">   Outlook Company Sailboat Sail</span><br><span class="line">0    rainy     big      big  yes</span><br><span class="line">1    rainy     big    small  yes</span><br><span class="line">2    rainy     med      big   no</span><br><span class="line">3    rainy     med    small   no</span><br><span class="line">4    sunny     big      big  yes</span><br><span class="line">5    sunny     big    small  yes</span><br><span class="line">6    sunny     med      big  yes</span><br><span class="line">7    sunny     med      big  yes</span><br><span class="line">8    sunny     med    small  yes</span><br><span class="line">9    sunny      no    small  yes</span><br><span class="line">10   sunny      no      big   no</span><br><span class="line">11   rainy     med      big   no</span><br><span class="line">12   rainy      no      big   no</span><br><span class="line">13   rainy      no      big   no</span><br><span class="line">14   rainy      no    small   no</span><br><span class="line">15   rainy      no    small   no</span><br><span class="line">16   sunny     big      big  yes</span><br><span class="line"></span><br><span class="line">   Outlook Company Sailboat Sail</span><br><span class="line">0    rainy     big      big  yes</span><br><span class="line">1    rainy     big    small  yes</span><br><span class="line">2    rainy     med      big   no</span><br><span class="line">3    rainy     med    small   no</span><br><span class="line">11   rainy     med      big   no</span><br><span class="line">12   rainy      no      big   no</span><br><span class="line">13   rainy      no      big   no</span><br><span class="line">14   rainy      no    small   no</span><br><span class="line">15   rainy      no    small   no</span><br></pre></td></tr></table></figure><p>以上。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本文所做数据处理为计算entropy(熵)，应用简易的Rule Learning(规则学习)算法。&lt;/p&gt;
&lt;p&gt;所用数据为：&lt;/p&gt;
&lt;p&gt;sailing-custom-python.tab&lt;/p&gt;
&lt;p&gt;zoo-python.tab&lt;/p&gt;
&lt;h4 id=&quot;1-Impo
      
    
    </summary>
    
    
      <category term="机器学习" scheme="http://yoursite.com/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>React动态生成component自定义组件</title>
    <link href="http://yoursite.com/2018/09/02/React%E5%8A%A8%E6%80%81%E7%94%9F%E6%88%90component%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BB%84%E4%BB%B6/"/>
    <id>http://yoursite.com/2018/09/02/React动态生成component自定义组件/</id>
    <published>2018-09-02T06:21:54.000Z</published>
    <updated>2019-01-23T11:03:28.217Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-遇到的问题"><a href="#1-遇到的问题" class="headerlink" title="1. 遇到的问题"></a>1. 遇到的问题</h3><p>这段时间写React项目，要根据自定义数量生成自定义组件。</p><p>原始的</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.getElementById(expamle).innerHTML +=<span class="string">""</span>;</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">"myList"</span>).appendChild(newListItem);</span><br></pre></td></tr></table></figure><p>直接操作HTML DOM的方法是不行的，组件不会被渲染到。</p><p>之前上网查了很多方法都不是太优雅，比如</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> newDIV = <span class="built_in">document</span>.createElement(<span class="string">'div'</span>);</span><br><span class="line"><span class="keyword">var</span> desktop = <span class="built_in">document</span>.getElementById(<span class="string">'body'</span>);</span><br><span class="line">desktop.appendChild(newDIV);</span><br><span class="line">ReactDOM.render(new_compoent, newDIV);</span><br></pre></td></tr></table></figure><h3 id="2-解决方案"><a href="#2-解决方案" class="headerlink" title="2. 解决方案"></a>2. 解决方案</h3><p><em>react里面有个公式：组件(数据)=渲染出的DOM。</em></p><p>在React中所有数据是要放到props或者state中，调用setState后组件才会刷新，即重新执行render方法。</p><p>于是首先将自定义组件CardView写好然后export</p><p><img src="https://s1.ax1x.com/2018/09/02/Pxc2QS.md.png" alt=""></p><p>然后写一个自定义数量生成CardView组件的组件CommonCardView</p><p><img src="https://s1.ax1x.com/2018/09/02/Pxccz8.md.png" alt=""></p><p>最后在页面中加入CommonCardView组件即可。</p><p><em>其中，数据经过props传递。</em></p><p><img src="https://s1.ax1x.com/2018/09/02/Pxc6Rf.png" alt=""></p><p>以上。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-遇到的问题&quot;&gt;&lt;a href=&quot;#1-遇到的问题&quot; class=&quot;headerlink&quot; title=&quot;1. 遇到的问题&quot;&gt;&lt;/a&gt;1. 遇到的问题&lt;/h3&gt;&lt;p&gt;这段时间写React项目，要根据自定义数量生成自定义组件。&lt;/p&gt;
&lt;p&gt;原始的&lt;/p&gt;
&lt;fi
      
    
    </summary>
    
    
      <category term="React" scheme="http://yoursite.com/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>mysql终端基本操作</title>
    <link href="http://yoursite.com/2018/03/16/mysql%E7%BB%88%E7%AB%AF%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"/>
    <id>http://yoursite.com/2018/03/16/mysql终端基本操作/</id>
    <published>2018-03-16T07:29:23.000Z</published>
    <updated>2019-01-23T11:03:23.293Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-从终端进出mysql"><a href="#1-从终端进出mysql" class="headerlink" title="1. 从终端进出mysql"></a>1. 从终端进出mysql</h3><p>先在偏好设置里启动mysql服务</p><p>获取超级权限</p><p>在终端输入代码</p><p>sudo su</p><p>输入完后获取超级权限 终端显示 sh-3.2#</p><p>输入本机密码（Apple ID密码）</p><p>接着通过绝对路径登陆 代码</p><p>/usr/local/mysql/bin/mysql -u root -p</p><p>再输入mysql密码（我的密码设置为root）</p><p>登陆成功</p><p>退出代码</p><p>quit</p><p>退出成功 bye</p><p>最后退出sh-3.2#超级权限 代码</p><p>exit</p><h3 id="2-修改mysql密码"><a href="#2-修改mysql密码" class="headerlink" title="2. 修改mysql密码"></a>2. 修改mysql密码</h3><p>set password for ‘root‘@’localhost’ = password(‘root’);</p><h3 id="3-数据库操作"><a href="#3-数据库操作" class="headerlink" title="3. 数据库操作"></a>3. 数据库操作</h3><p>下面介绍一些关于从数据库创建到使用的一些简单的方法；</p><p><strong>创建一个名字为mydatabase数据库：  create database mydatabase ;</strong></p><p><strong>可以用以下地命令来查看创建的数据库是否成功： show databases ;</strong></p><p><strong>更改数据库名字 ： alter databases  Hdatabase ;</strong></p><p><strong>更改数据库mydatabase的字符集 ：  alter database mydatabase charset GBK ;</strong></p><p>进入数据库：  use mydatabase ;</p><p><strong>用下面的命令来查看该数据库中的表：  show tables ;</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-从终端进出mysql&quot;&gt;&lt;a href=&quot;#1-从终端进出mysql&quot; class=&quot;headerlink&quot; title=&quot;1. 从终端进出mysql&quot;&gt;&lt;/a&gt;1. 从终端进出mysql&lt;/h3&gt;&lt;p&gt;先在偏好设置里启动mysql服务&lt;/p&gt;
&lt;p&gt;获取超级
      
    
    </summary>
    
    
      <category term="mysql" scheme="http://yoursite.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>用Scrapy和xpath爬取网页-2</title>
    <link href="http://yoursite.com/2018/02/14/%E7%94%A8Scrapy%E5%92%8Cxpath%E7%88%AC%E5%8F%96%E7%BD%91%E9%A1%B5-2/"/>
    <id>http://yoursite.com/2018/02/14/用Scrapy和xpath爬取网页-2/</id>
    <published>2018-02-14T12:59:42.000Z</published>
    <updated>2019-01-23T11:04:05.021Z</updated>
    
    <content type="html"><![CDATA[<p>本文是接上节中内容，在pycharm里面爬取数据。</p><h2 id="一、pycharm配置scrapy"><a href="#一、pycharm配置scrapy" class="headerlink" title="一、pycharm配置scrapy"></a>一、pycharm配置scrapy</h2><p>pycharm可以自己下载scrapy非常方便。</p><p>Preferences -&gt; Project Interpreter 直接添加Scrapy即可。</p><h2 id="二、建立scrapy项目"><a href="#二、建立scrapy项目" class="headerlink" title="二、建立scrapy项目"></a>二、建立scrapy项目</h2><p>上节中已经介绍过，在pycharm里打开刚建立好的scrapy项目</p><h2 id="三、编写爬虫代码"><a href="#三、编写爬虫代码" class="headerlink" title="三、编写爬虫代码"></a>三、编写爬虫代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GanjiSpider</span><span class="params">(scrapy.Spider)</span>:</span></span><br><span class="line">    name = <span class="string">"zufang"</span></span><br><span class="line">    start_urls = [<span class="string">'http://bj.ganji.com/fang1/'</span>]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(self, response)</span>:</span></span><br><span class="line">        print(response)</span><br><span class="line"></span><br><span class="line">        title_list = response.xpath(<span class="string">".//div[@class='f-list-item ershoufang-list']/dl/dd[1]/a/text()"</span>).extract()</span><br><span class="line">        price_list = response.xpath(<span class="string">".//div[@class='f-list-item ershoufang-list']/dl/dd[5]/div[1]/span[1]/text()"</span>).extract()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i, j <span class="keyword">in</span> zip(title_list, price_list):</span><br><span class="line">            print(i).encode(<span class="string">'UTF-8'</span>)</span><br><span class="line">            print(j)</span><br></pre></td></tr></table></figure><p>批注：</p><ol><li>不要忘了加encode 不然打印出来的不是汉字。</li><li>python内置zip函数。 是取其后两个参数一组一组打印，以少的为准。</li></ol><h2 id="四、在pycharm内置终端上爬取项目"><a href="#四、在pycharm内置终端上爬取项目" class="headerlink" title="四、在pycharm内置终端上爬取项目"></a>四、在pycharm内置终端上爬取项目</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scrapy crawl project</span><br></pre></td></tr></table></figure><p>批注：此处project为项目名</p><p>另外，还可以用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scrapy list</span><br></pre></td></tr></table></figure><p>查看当前所有scrapy项目</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本文是接上节中内容，在pycharm里面爬取数据。&lt;/p&gt;
&lt;h2 id=&quot;一、pycharm配置scrapy&quot;&gt;&lt;a href=&quot;#一、pycharm配置scrapy&quot; class=&quot;headerlink&quot; title=&quot;一、pycharm配置scrapy&quot;&gt;&lt;/a&gt;一、
      
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>用Scrapy和xpath爬取网页-1</title>
    <link href="http://yoursite.com/2018/02/13/%E7%94%A8Scrapy%E5%92%8Cxpath%E7%88%AC%E5%8F%96%E7%BD%91%E9%A1%B5-1/"/>
    <id>http://yoursite.com/2018/02/13/用Scrapy和xpath爬取网页-1/</id>
    <published>2018-02-13T08:46:01.000Z</published>
    <updated>2019-01-23T11:04:00.198Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、Scrapy"><a href="#一、Scrapy" class="headerlink" title="一、Scrapy"></a>一、Scrapy</h2><p>首先，Scrapy是一个爬虫框架，用来爬取网页。接下来的工作基于Scrapy的基本应用。</p><h3 id="1）关于Scrapy的部署"><a href="#1）关于Scrapy的部署" class="headerlink" title="1）关于Scrapy的部署"></a>1）关于Scrapy的部署</h3><p>首先我电脑里已经有python2 和python3。</p><p>python3会带有pip。</p><p>我是用pip来安装scrapy的。</p><p>首先检测一下pip3版本。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip3 --version</span><br><span class="line">pip 9.0.1 from /Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages (python 3.5)</span><br></pre></td></tr></table></figure><p>然后用pip3安装Scrapy。【高亮】此处S大写。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install Scrapy</span><br></pre></td></tr></table></figure><p>接下来测试一下Scrapy的版本。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Scrapy 1.5.0 - no active project</span><br><span class="line"></span><br><span class="line">Usage:</span><br><span class="line">  scrapy &lt;command&gt; [options] [args]</span><br><span class="line"></span><br><span class="line">Available commands:</span><br><span class="line">  bench         Run quick benchmark test</span><br><span class="line">  fetch         Fetch a URL using the Scrapy downloader</span><br><span class="line">  genspider     Generate new spider using pre-defined templates</span><br><span class="line">  runspider     Run a self-contained spider (without creating a project)</span><br><span class="line">  settings      Get settings values</span><br><span class="line">  shell         Interactive scraping console</span><br><span class="line">  startproject  Create new project</span><br><span class="line">  version       Print Scrapy version</span><br><span class="line">  view          Open URL in browser, as seen by Scrapy</span><br><span class="line"></span><br><span class="line">  [ more ]      More commands available when run from project directory</span><br><span class="line"></span><br><span class="line">Use &quot;scrapy &lt;command&gt; -h&quot; to see more info about a command</span><br></pre></td></tr></table></figure><p>ok 此时Scrapy已经部署完毕</p><h3 id="2）用Scrapy创建项目（此例中不必须）"><a href="#2）用Scrapy创建项目（此例中不必须）" class="headerlink" title="2）用Scrapy创建项目（此例中不必须）"></a>2）用Scrapy创建项目（此例中不必须）</h3><p>在命令行中新建项目（此处spider为项目名）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scrapy startproject spider</span><br></pre></td></tr></table></figure><h2 id="二、爬取网页数据"><a href="#二、爬取网页数据" class="headerlink" title="二、爬取网页数据"></a>二、爬取网页数据</h2><h3 id="1-我们随便测试一个网站"><a href="#1-我们随便测试一个网站" class="headerlink" title="1)我们随便测试一个网站"></a>1)我们随便测试一个网站</h3><p>随便登录一个网站并且拷贝地址。在终端（即命令行）中运行。（如下地址可替换为任一网站）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scrapy shell http://bj.ganji.com/fang1/</span><br></pre></td></tr></table></figure><h3 id="2）在默认浏览器中打开刚刚爬取的网页"><a href="#2）在默认浏览器中打开刚刚爬取的网页" class="headerlink" title="2）在默认浏览器中打开刚刚爬取的网页"></a>2）在默认浏览器中打开刚刚爬取的网页</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">view(response)</span><br></pre></td></tr></table></figure><p>爬取的网页会自动打开，此时我们会发现与原来的网页一模一样。</p><h3 id="3）打开开发者模式下web控制台"><a href="#3）打开开发者模式下web控制台" class="headerlink" title="3）打开开发者模式下web控制台"></a>3）打开开发者模式下web控制台</h3><h3 id="4）用xpath插件获取要爬取的数据地址"><a href="#4）用xpath插件获取要爬取的数据地址" class="headerlink" title="4）用xpath插件获取要爬取的数据地址"></a>4）用xpath插件获取要爬取的数据地址</h3><p>此文打算爬取租房网站的房屋信息和价格。所以我们先获取价格的xpath。</p><p>如图-1</p><p><img src="http://chuantu.biz/t6/228/1518515240x-1566638183.png" alt="1"></p><h3 id="5）终端中运行以下命令测试结果"><a href="#5）终端中运行以下命令测试结果" class="headerlink" title="5）终端中运行以下命令测试结果"></a>5）终端中运行以下命令测试结果</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">response.xpath(&quot;此处为获取的xpath地址&quot;).extract()</span><br></pre></td></tr></table></figure><p>如图-2</p><p><img src="http://chuantu.biz/t6/228/1518515323x-1566638183.png" alt="2"></p><h3 id="6）观察想要获取的xpath的异同并爬取数据"><a href="#6）观察想要获取的xpath的异同并爬取数据" class="headerlink" title="6）观察想要获取的xpath的异同并爬取数据"></a>6）观察想要获取的xpath的异同并爬取数据</h3><p>比如此例中发现，不同价格的xpath均为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.//div[n]/dl/dd[5]/div[1]/span[1]</span><br></pre></td></tr></table></figure><p>n为从1开始增大的整数。</p><p>我们还发现，每个div的id都不同，但是class是相同的。至此，我们找到了这些数据的共同点。采取用class来爬取数据。</p><p>如图-3</p><p><img src="http://chuantu.biz/t6/228/1518515388x-1566638183.png" alt="3"></p><p>此例中为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.//div[@class=&apos;f-list-item ershoufang-list&apos;]/...</span><br></pre></td></tr></table></figure><p>如图-4 以获取当前页面所有的租房价格。</p><p><img src="http://chuantu.biz/t6/228/1518515458x-1566638183.png" alt="4"></p><p>以此类推，租房信息也是一样的思路。</p><p>如图-5</p><p><img src="http://chuantu.biz/t6/228/1518515596x-1566638183.png" alt="5"></p><p>只需稍加处理便可进行数据分析。</p><p>以上。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;一、Scrapy&quot;&gt;&lt;a href=&quot;#一、Scrapy&quot; class=&quot;headerlink&quot; title=&quot;一、Scrapy&quot;&gt;&lt;/a&gt;一、Scrapy&lt;/h2&gt;&lt;p&gt;首先，Scrapy是一个爬虫框架，用来爬取网页。接下来的工作基于Scrapy的基本应用。&lt;/
      
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>JS 学习笔记-1</title>
    <link href="http://yoursite.com/2018/02/10/JS-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1/"/>
    <id>http://yoursite.com/2018/02/10/JS-学习笔记-1/</id>
    <published>2018-02-10T15:11:17.000Z</published>
    <updated>2019-01-23T11:03:33.871Z</updated>
    
    <content type="html"><![CDATA[<h2 id="11-字符串方法"><a href="#11-字符串方法" class="headerlink" title="11. 字符串方法"></a>11. 字符串方法</h2><table><thead><tr><th><strong>Method</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td>charAt()</td><td>返回指定索引位置的字符</td></tr><tr><td>charCodeAt()</td><td>返回指定索引位置字符的 Unicode 值</td></tr><tr><td>concat()</td><td>连接两个或多个字符串，返回连接后的字符串</td></tr><tr><td>fromCharCode()</td><td>将字符转换为 Unicode 值</td></tr><tr><td>indexOf()</td><td>返回字符串中检索指定字符第一次出现的位置</td></tr><tr><td>lastIndexOf()</td><td>返回字符串中检索指定字符最后一次出现的位置</td></tr><tr><td>localeCompare()</td><td>用本地特定的顺序来比较两个字符串</td></tr><tr><td>match()</td><td>找到一个或多个正则表达式的匹配</td></tr><tr><td>replace()</td><td>替换与正则表达式匹配的子串</td></tr><tr><td>search()</td><td>检索与正则表达式相匹配的值</td></tr><tr><td>slice()</td><td>提取字符串的片断，并在新的字符串中返回被提取的部分</td></tr><tr><td>split()</td><td>把字符串分割为子字符串数组</td></tr><tr><td>substr()</td><td>从起始索引号提取字符串中指定数目的字符</td></tr><tr><td>substring()</td><td>提取字符串中两个指定的索引号之间的字符</td></tr><tr><td>toLocaleLowerCase()</td><td>根据主机的语言环境把字符串转换为小写，只有几种语言（如土耳其语）具有地方特有的大小写映射</td></tr><tr><td>toLocaleUpperCase()</td><td>根据主机的语言环境把字符串转换为大写，只有几种语言（如土耳其语）具有地方特有的大小写映射</td></tr><tr><td>toLowerCase()</td><td>把字符串转换为小写</td></tr><tr><td>toString()</td><td>返回字符串对象值</td></tr><tr><td>toUpperCase()</td><td>把字符串转换为大写</td></tr><tr><td>trim()</td><td>移除字符串首尾空白</td></tr><tr><td>valueOf()</td><td>返回某个字符串对象的原始值</td></tr></tbody></table><h2 id="12-比较运算符"><a href="#12-比较运算符" class="headerlink" title="12. 比较运算符"></a>12. 比较运算符</h2><p>x=5</p><table><thead><tr><th>===</th><th>绝对等于（值和类型均相等）</th><th>x===”5”</th><th><em>FALSE</em></th></tr></thead><tbody><tr><td>x===5</td><td><em>TRUE</em></td><td></td></tr></tbody></table><table><thead><tr><th>!==</th><th>不绝对等于（值和类型有一个不相等，或两个都不相等）</th><th>x!==”5”</th><th><em>TRUE</em></th></tr></thead><tbody><tr><td>x!==5</td><td><em>FALSE</em></td><td></td></tr></tbody></table><h2 id="13-JavaScript-数据类型"><a href="#13-JavaScript-数据类型" class="headerlink" title="13. JavaScript 数据类型"></a>13. JavaScript 数据类型</h2><p>在 JavaScript 中有 5 种不同的数据类型：</p><p>​    •    string</p><p>​    •    number</p><p>​    •    boolean</p><p>​    •    object</p><p>​    •    function</p><p>3 种对象类型：</p><p>​    •    Object</p><p>​    •    Date</p><p>​    •    Array</p><p>2 个不包含任何值的数据类型：</p><p>​    •    null</p><p>​    •    undefined</p><h3 id="1）typeof-操作符"><a href="#1）typeof-操作符" class="headerlink" title="1）typeof 操作符"></a>1）typeof 操作符</h3><p>你可以使用 <strong>typeof</strong> 操作符来查看 JavaScript 变量的数据类型。</p><p><strong>实例</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">typeof &quot;John&quot;                 // 返回 string </span><br><span class="line"></span><br><span class="line">typeof 3.14                   // 返回 number</span><br><span class="line"></span><br><span class="line">typeof NaN                    // 返回 number </span><br><span class="line"></span><br><span class="line">typeof false                  // 返回 boolean</span><br><span class="line"></span><br><span class="line">typeof [1,2,3,4]              // 返回 object</span><br><span class="line"></span><br><span class="line">typeof &#123;name: &apos;John&apos;, age:34&#125;  // 返回 object</span><br><span class="line"></span><br><span class="line">typeof new Date()             // 返回 object</span><br><span class="line"></span><br><span class="line">typeof function () &#123;&#125;         // 返回 function</span><br><span class="line"></span><br><span class="line">typeof myCar                  // 返回 undefined (if myCar is not declared) </span><br><span class="line"></span><br><span class="line">typeof null                   // 返回 object</span><br></pre></td></tr></table></figure><p>请注意：</p><p>​    •    NaN 的数据类型是 number</p><p>​    •    数组(Array)的数据类型是 object</p><p>​    •    日期(Date)的数据类型为 object</p><p>​    •    null 的数据类型是 object</p><p>​    •    未定义变量的数据类型为 undefined</p><h3 id="2）数字转字符串"><a href="#2）数字转字符串" class="headerlink" title="2）数字转字符串"></a>2）数字转字符串</h3><p>全局方法 <strong>String()</strong> 可以将数字转换为字符串。</p><p><strong>实例</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">String(x)         // 将变量 x 转换为字符串并返回</span><br><span class="line"></span><br><span class="line">String(123)       // 将数字 123 转换为字符串并返回</span><br><span class="line"></span><br><span class="line">String( 100+ 23)  // 将数字表达式转换为字符串并返回</span><br><span class="line"></span><br><span class="line">Number 方法 toString() 也是有同样的效果。</span><br></pre></td></tr></table></figure><p><strong>实例</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">x.toString() </span><br><span class="line"></span><br><span class="line">(123).toString() </span><br><span class="line"></span><br><span class="line">(100 + 23).toString()</span><br></pre></td></tr></table></figure><p>其他方法</p><table><thead><tr><th><strong>方法</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td>toExponential()</td><td>把对象的值转换为指数计数法。</td></tr><tr><td>toFixed()</td><td>把数字转换为字符串，结果的小数点后有指定位数的数字。</td></tr><tr><td>toPrecision()</td><td>把数字格式化为指定的长度。</td></tr></tbody></table><h3 id="3）布尔转字符串"><a href="#3）布尔转字符串" class="headerlink" title="3）布尔转字符串"></a>3）布尔转字符串</h3><p>全局方法 <strong>String()</strong> 可以将布尔值转换为字符串。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">String(false)        // 返回 &quot;false&quot;</span><br><span class="line"></span><br><span class="line">String(true)         // 返回 &quot;true&quot;</span><br><span class="line"></span><br><span class="line">Boolean 方法 toString() 也有相同的效果。</span><br><span class="line"></span><br><span class="line">false.toString()     // 返回 &quot;false&quot;</span><br><span class="line"></span><br><span class="line">true.toString()      // 返回 “true”</span><br></pre></td></tr></table></figure><h3 id="4）日期转字符串"><a href="#4）日期转字符串" class="headerlink" title="4）日期转字符串"></a>4）日期转字符串</h3><p>全局方法 <strong>String()</strong> 可以将日期转换为字符串。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String(Date())      // 返回 Thu Jul 17 2014 15:38:19 GMT+0200 (W. Europe Daylight Time)</span><br></pre></td></tr></table></figure><p>Date 方法 toString() 也有相同的效果。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Date().toString()   // 返回 Thu Jul 17 2014 15:38:19 GMT+0200 (W. Europe Daylight Time)</span><br></pre></td></tr></table></figure><p>其他方法</p><table><thead><tr><th><strong>方法</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td>getDate()</td><td>从 Date 对象返回一个月中的某一天 (1 ~ 31)。</td></tr><tr><td>getDay()</td><td>从 Date 对象返回一周中的某一天 (0 ~ 6)。</td></tr><tr><td>getFullYear()</td><td>从 Date 对象以四位数字返回年份。</td></tr><tr><td>getHours()</td><td>返回 Date 对象的小时 (0 ~ 23)。</td></tr><tr><td>getMilliseconds()</td><td>返回 Date 对象的毫秒(0 ~ 999)。</td></tr><tr><td>getMinutes()</td><td>返回 Date 对象的分钟 (0 ~ 59)。</td></tr><tr><td>getMonth()</td><td>从 Date 对象返回月份 (0 ~ 11)。</td></tr><tr><td>getSeconds()</td><td>返回 Date 对象的秒数 (0 ~ 59)。</td></tr><tr><td>getTime()</td><td>返回 1970 年 1 月 1 日至今的毫秒数。</td></tr></tbody></table><h3 id="5）字符串转数字"><a href="#5）字符串转数字" class="headerlink" title="5）字符串转数字"></a>5）字符串转数字</h3><p>全局方法 <strong>Number()</strong> 可以将字符串转换为数字。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Number(&quot;3.14&quot;)    // 返回 3.14</span><br><span class="line"></span><br><span class="line">Number(&quot; &quot;)       // 返回 0 </span><br><span class="line"></span><br><span class="line">Number(&quot;&quot;)        // 返回 0 </span><br><span class="line"></span><br><span class="line">Number(&quot;99 88&quot;)   // 返回 NaN</span><br></pre></td></tr></table></figure><p>其他方法</p><table><thead><tr><th><strong>方法</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td>parseFloat()</td><td>解析一个字符串，并返回一个浮点数。</td></tr><tr><td>parseInt()</td><td>解析一个字符串，并返回一个整数。</td></tr></tbody></table><h3 id="6）一元运算符"><a href="#6）一元运算符" class="headerlink" title="6）一元运算符 +"></a>6）一元运算符 +</h3><p><strong>Operator + </strong>可用于将变量转换为数字：</p><p><strong>实例</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var y = &quot;5&quot;;      // y 是一个字符串</span><br><span class="line"></span><br><span class="line">var x = + y;      // x 是一个数字</span><br></pre></td></tr></table></figure><p>如果变量不能转换，它仍然会是一个数字，但值为 NaN (不是一个数字):</p><p><strong>实例</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var y = &quot;John&quot;;   // y 是一个字符串</span><br><span class="line"></span><br><span class="line">var x = + y;      // x 是一个数字 (NaN)</span><br></pre></td></tr></table></figure><h3 id="7）将布尔值转换为数字"><a href="#7）将布尔值转换为数字" class="headerlink" title="7）将布尔值转换为数字"></a>7）将布尔值转换为数字</h3><p>全局方法 <strong>Number()</strong> 可将布尔值转换为数字。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Number(false)     // 返回 0</span><br><span class="line"></span><br><span class="line">Number(true)      // 返回 1</span><br></pre></td></tr></table></figure><h3 id="8）将日期转换为数字"><a href="#8）将日期转换为数字" class="headerlink" title="8）将日期转换为数字"></a>8）将日期转换为数字</h3><p>全局方法 <strong>Number()</strong> 可将日期转换为数字。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">d = new Date(); </span><br><span class="line"></span><br><span class="line">Number(d)          // 返回 1404568027739</span><br></pre></td></tr></table></figure><p>日期方法 <strong>getTime()</strong> 也有相同的效果。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">d = new Date(); </span><br><span class="line"></span><br><span class="line">d.getTime()        // 返回 1404568027739</span><br></pre></td></tr></table></figure><h3 id="9）自动转换类型-Type-Conversion"><a href="#9）自动转换类型-Type-Conversion" class="headerlink" title="9）自动转换类型 Type Conversion"></a>9）自动转换类型 Type Conversion</h3><p>当 JavaScript 尝试操作一个 “错误” 的数据类型时，会自动转换为 “正确” 的数据类型。</p><p>以下输出结果不是你所期望的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">5 + null    // 返回 5         because null is converted to 0</span><br><span class="line"></span><br><span class="line">&quot;5&quot; + null  // 返回&quot;5null&quot;   because null is converted to &quot;null&quot; </span><br><span class="line"></span><br><span class="line">&quot;5&quot; + 1     // 返回 &quot;51&quot;      because 1 is converted to &quot;1&quot;  </span><br><span class="line"></span><br><span class="line">&quot;5&quot; - 1     // 返回 4         because &quot;5&quot; is converted to 5</span><br></pre></td></tr></table></figure><h3 id="10）自动转换为字符串"><a href="#10）自动转换为字符串" class="headerlink" title="10）自动转换为字符串"></a>10）自动转换为字符串</h3><p>当你尝试输出一个对象或一个变量时 JavaScript 会自动调用变量的 toString() 方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">document.getElementById(&quot;demo&quot;).innerHTML = myVar; </span><br><span class="line"></span><br><span class="line">// if myVar = &#123;name:&quot;Fjohn&quot;&#125;  // toString 转换为 &quot;[object Object]&quot;</span><br><span class="line"></span><br><span class="line">// if myVar = [1,2,3,4]       // toString 转换为 &quot;1,2,3,4&quot;</span><br><span class="line"></span><br><span class="line">// if myVar = new Date()      // toString 转换为 &quot;Fri Jul 18 2014 09:08:55 GMT+0200&quot;</span><br></pre></td></tr></table></figure><p>数字和布尔值也经常相互转换：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// if myVar = 123             // toString 转换为 &quot;123&quot;</span><br><span class="line"></span><br><span class="line">// if myVar = true            // toString 转换为 &quot;true&quot;</span><br><span class="line"></span><br><span class="line">// if myVar = false           // toString 转换为 &quot;false&quot;</span><br></pre></td></tr></table></figure><h3 id="11）null"><a href="#11）null" class="headerlink" title="11）null"></a>11）null</h3><p>在 JavaScript 中 null 表示 “什么都没有”，是一个只有一个值的特殊类型，表示一个空对象引用。</p><p>当设置为“null”时，可以用来清空对象：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var person = null; // 值为 null(空), 但类型为对象</span><br></pre></td></tr></table></figure><p><strong>提示：</strong>你可以使用 typeof 检测 null 返回是object。</p><h3 id="12）undefined"><a href="#12）undefined" class="headerlink" title="12）undefined"></a><strong>12</strong>）undefined</h3><p>在 JavaScript 中 undefined 是一个没有设置值的变量。</p><p>如果一个变量没有设置值的话，就会返回 undefined：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> person; <span class="comment">// 值为 undefined(空), 类型是undefined</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;11-字符串方法&quot;&gt;&lt;a href=&quot;#11-字符串方法&quot; class=&quot;headerlink&quot; title=&quot;11. 字符串方法&quot;&gt;&lt;/a&gt;11. 字符串方法&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;Method&lt;/strong
      
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JS 学习笔记-0</title>
    <link href="http://yoursite.com/2018/02/10/JS-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-0/"/>
    <id>http://yoursite.com/2018/02/10/JS-学习笔记-0/</id>
    <published>2018-02-10T10:11:27.000Z</published>
    <updated>2019-01-23T11:03:38.646Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-button事件响应"><a href="#1-button事件响应" class="headerlink" title="1. button事件响应"></a>1. button事件响应</h2><h3 id="1）一般"><a href="#1）一般" class="headerlink" title="1）一般"></a>1）一般</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;button type=&quot;button&quot; onclick=“alert(&apos;欢迎!&apos;)&quot;&gt;点我!&lt;/button&gt;</span><br></pre></td></tr></table></figure><h3 id="2）通过id"><a href="#2）通过id" class="headerlink" title="2）通过id"></a>2）通过id</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;h1&gt;我的第一段 JavaScript&lt;/h1&gt;</span><br><span class="line">&lt;p id=&quot;demo&quot;&gt;</span><br><span class="line">JavaScript 能改变 HTML 元素的内容。</span><br><span class="line">&lt;/p&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">function myFunction()&#123;</span><br><span class="line">    x=document.getElementById(&quot;demo&quot;);  // 找到元素</span><br><span class="line">    x.innerHTML=&quot;Hello JavaScript!&quot;;    // 改变内容</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;button type=&quot;button&quot; onclick=&quot;myFunction()&quot;&gt;点击这里&lt;/button&gt;</span><br></pre></td></tr></table></figure><h2 id="2-警示框"><a href="#2-警示框" class="headerlink" title="2. 警示框"></a>2. 警示框</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">window.alert(5 + 6);</span><br></pre></td></tr></table></figure><h2 id="3-修改HTML元素"><a href="#3-修改HTML元素" class="headerlink" title="3. 修改HTML元素"></a>3. 修改HTML元素</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">document.getElementById(“demo&quot;).innerHTML=&quot;段落已修改。&quot;;</span><br></pre></td></tr></table></figure><h2 id="4-写操作"><a href="#4-写操作" class="headerlink" title="4. 写操作"></a>4. 写操作</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用 console.log() 方法在浏览器中（调试模式）显示 JavaScript 值</span><br></pre></td></tr></table></figure><h2 id="5-数组"><a href="#5-数组" class="headerlink" title="5. 数组"></a>5. 数组</h2><h3 id="例1："><a href="#例1：" class="headerlink" title="例1："></a>例1：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">var i;</span><br><span class="line">var cars = new Array();</span><br><span class="line">cars[0] = &quot;Saab&quot;;</span><br><span class="line">cars[1] = &quot;Volvo&quot;;</span><br><span class="line">cars[2] = &quot;BMW&quot;;</span><br><span class="line">for (i=0;i&lt;cars.length;i++)&#123;</span><br><span class="line">document.write(cars[i] + &quot;&lt;br&gt;&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="例2："><a href="#例2：" class="headerlink" title="例2："></a>例2：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var cars=new Array(“Saab&quot;,&quot;Volvo&quot;,&quot;BMW&quot;);</span><br></pre></td></tr></table></figure><h3 id="例3："><a href="#例3：" class="headerlink" title="例3："></a>例3：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var cars=[&quot;Saab&quot;,&quot;Volvo&quot;,&quot;BMW&quot;];</span><br></pre></td></tr></table></figure><h2 id="6-对象"><a href="#6-对象" class="headerlink" title="6. 对象"></a>6. 对象</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var person=&#123;firstname:&quot;John&quot;, lastname:&quot;Doe&quot;, id:5566&#125;;</span><br></pre></td></tr></table></figure><p>寻址方式：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">name=person.lastname;</span><br><span class="line">name=person[“lastname&quot;];</span><br></pre></td></tr></table></figure><h2 id="7-声明变量类型"><a href="#7-声明变量类型" class="headerlink" title="7. 声明变量类型"></a>7. 声明变量类型</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var carname = new String;</span><br><span class="line">var x = new Number;</span><br><span class="line">var y = new Boolean;</span><br><span class="line">var cars = new Array;</span><br><span class="line">var person = new Object;</span><br></pre></td></tr></table></figure><h2 id="8-常见的HTML事件"><a href="#8-常见的HTML事件" class="headerlink" title="8. 常见的HTML事件"></a>8. 常见的HTML事件</h2><p>下面是一些常见的HTML事件的列表:</p><table><thead><tr><th>事件</th><th>描述</th></tr></thead><tbody><tr><td>onchange</td><td>HTML 元素改变</td></tr><tr><td>onclick</td><td>用户点击 HTML 元素</td></tr><tr><td>onmouseover</td><td>用户在一个HTML元素上移动鼠标</td></tr><tr><td>onmouseout</td><td>用户从一个HTML元素上移开鼠标</td></tr><tr><td>onkeydown</td><td>用户按下键盘按键</td></tr><tr><td>onload</td><td>浏览器已完成页面的加载</td></tr></tbody></table><h2 id="9-常见转义符"><a href="#9-常见转义符" class="headerlink" title="9. 常见转义符"></a>9. 常见转义符</h2><p>下表中列举了在字符串中可以使用转义字符转义的特殊字符：</p><table><thead><tr><th>代码</th><th>输出</th></tr></thead><tbody><tr><td>\’</td><td>单引号</td></tr><tr><td>\”</td><td>双引号</td></tr><tr><td>\</td><td>反斜杠</td></tr><tr><td>\n</td><td>换行</td></tr><tr><td>\r</td><td>回车</td></tr><tr><td>\t</td><td>tab(制表符)</td></tr><tr><td>\b</td><td>退格符</td></tr><tr><td>\f</td><td>换页符</td></tr></tbody></table><h2 id="10-字符串属性"><a href="#10-字符串属性" class="headerlink" title="10. 字符串属性"></a>10. 字符串属性</h2><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>constructor</td><td>返回创建字符串属性的函数</td></tr><tr><td>length</td><td>返回字符串的长度</td></tr><tr><td>prototype</td><td>允许您向对象添加属性和方法</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-button事件响应&quot;&gt;&lt;a href=&quot;#1-button事件响应&quot; class=&quot;headerlink&quot; title=&quot;1. button事件响应&quot;&gt;&lt;/a&gt;1. button事件响应&lt;/h2&gt;&lt;h3 id=&quot;1）一般&quot;&gt;&lt;a href=&quot;#1）一般&quot; c
      
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2018/02/09/hello-world/"/>
    <id>http://yoursite.com/2018/02/09/hello-world/</id>
    <published>2018-02-08T17:19:20.000Z</published>
    <updated>2018-02-08T17:19:20.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>年少的诗-70-讳莫如深</title>
    <link href="http://yoursite.com/2018/02/08/%E5%B9%B4%E5%B0%91%E7%9A%84%E8%AF%97-70-%E8%AE%B3%E8%8E%AB%E5%A6%82%E6%B7%B1/"/>
    <id>http://yoursite.com/2018/02/08/年少的诗-70-讳莫如深/</id>
    <published>2018-02-08T11:49:13.000Z</published>
    <updated>2018-02-11T12:06:26.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="讳莫如深"><a href="#讳莫如深" class="headerlink" title="讳莫如深"></a>讳莫如深</h2><p>也许<br>是我始终没有勇气迎接<br>这即将夺眶而出的<br>泪<br>缓缓滑落<br>在至亲之人的面颊<br>至悲<br>至痛<br>我懂<br>却始终无法亲临感受</p><p>不<br>我怕<br>我更怕亲临<br>遁入骨髓<br>至阴<br>至寒<br>人间万物顿然而凋<br>只得逃之夭夭<br>唯此作掩</p><p>惧怕之事<br>时为虚幻<br>时为忏悔<br>时为无力却锥心<br>这黯然而绝望<br>纠缠着似无形<br>却总在恬淡安然之时<br>冷袭<br>溃不成军<br>怎可因身值壮年而止悲<br>怎可拿往事已陈而作藉<br>怎可断此缕哀婉幽然</p><p>明知了了<br>却只可搪塞<br>亦或尽绵绵薄力<br>这诅咒般一击即破的梦啊<br>竟如这般<br>造化弄人</p><p>我假意离开<br>兜兜转转将回<br>却瞥见清水点墨<br>可似抒心意愿景<br>近身 墨印深浅<br>早已不解其详<br>亦或不忍<br>只将这凄然埋葬<br>埋葬在那片彻骨，苍凉的黄土之下<br>讳莫<br>如深</p><p>————————————————</p><p>夙彧 2018.2.8</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;讳莫如深&quot;&gt;&lt;a href=&quot;#讳莫如深&quot; class=&quot;headerlink&quot; title=&quot;讳莫如深&quot;&gt;&lt;/a&gt;讳莫如深&lt;/h2&gt;&lt;p&gt;也许&lt;br&gt;是我始终没有勇气迎接&lt;br&gt;这即将夺眶而出的&lt;br&gt;泪&lt;br&gt;缓缓滑落&lt;br&gt;在至亲之人的面颊&lt;br&gt;至悲&lt;br
      
    
    </summary>
    
    
      <category term="现代诗" scheme="http://yoursite.com/tags/%E7%8E%B0%E4%BB%A3%E8%AF%97/"/>
    
  </entry>
  
  <entry>
    <title>年少的诗-69-无题</title>
    <link href="http://yoursite.com/2017/09/27/%E5%B9%B4%E5%B0%91%E7%9A%84%E8%AF%97-69-%E6%97%A0%E9%A2%98/"/>
    <id>http://yoursite.com/2017/09/27/年少的诗-69-无题/</id>
    <published>2017-09-27T11:47:45.000Z</published>
    <updated>2018-02-11T12:06:20.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="无题"><a href="#无题" class="headerlink" title="无题"></a>无题</h2><p>浮生光阴浅<br>愁无际<br>清欢几盏幻如剧<br>诉朝朝暮暮相忆</p><p>抚琴弦动碎月影<br>不堪荷风桂巷新<br>殇有情<br>只闻杜鹃啼</p><p>————————————————</p><p>夙彧 2017.9.27</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;无题&quot;&gt;&lt;a href=&quot;#无题&quot; class=&quot;headerlink&quot; title=&quot;无题&quot;&gt;&lt;/a&gt;无题&lt;/h2&gt;&lt;p&gt;浮生光阴浅&lt;br&gt;愁无际&lt;br&gt;清欢几盏幻如剧&lt;br&gt;诉朝朝暮暮相忆&lt;/p&gt;
&lt;p&gt;抚琴弦动碎月影&lt;br&gt;不堪荷风桂巷新&lt;br&gt;殇有情&lt;br
      
    
    </summary>
    
    
      <category term="现代诗" scheme="http://yoursite.com/tags/%E7%8E%B0%E4%BB%A3%E8%AF%97/"/>
    
  </entry>
  
  <entry>
    <title>年少的诗-68-如果早知道</title>
    <link href="http://yoursite.com/2017/08/11/%E5%B9%B4%E5%B0%91%E7%9A%84%E8%AF%97-68-%E5%A6%82%E6%9E%9C%E6%97%A9%E7%9F%A5%E9%81%93/"/>
    <id>http://yoursite.com/2017/08/11/年少的诗-68-如果早知道/</id>
    <published>2017-08-11T11:46:04.000Z</published>
    <updated>2018-02-11T12:06:14.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="如果早知道"><a href="#如果早知道" class="headerlink" title="如果早知道"></a>如果早知道</h2><p>你问我<br>如果预知入骨之痛<br>是否还会选择<br>开启这份虐心回忆<br>我说我无悔<br>如果有轮回<br>千千万万代</p><p>你问我<br>明明泪就在眼眶<br>为何还要嘴硬<br>我说我信缘<br>每段感情都在<br>三生石的刻痕里<br>岁月抹不掉的痕迹</p><p>如果明天就是灭亡<br>也不愿意抹去记忆<br>带着一世的执念<br>向死而生</p><p>如果早知结局唏嘘<br>就头也不回走向另一边<br>错过的<br>决不止风景</p><p>————————————————</p><p>夙彧 2017.8.11</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;如果早知道&quot;&gt;&lt;a href=&quot;#如果早知道&quot; class=&quot;headerlink&quot; title=&quot;如果早知道&quot;&gt;&lt;/a&gt;如果早知道&lt;/h2&gt;&lt;p&gt;你问我&lt;br&gt;如果预知入骨之痛&lt;br&gt;是否还会选择&lt;br&gt;开启这份虐心回忆&lt;br&gt;我说我无悔&lt;br&gt;如果有轮回&lt;br
      
    
    </summary>
    
    
      <category term="现代诗" scheme="http://yoursite.com/tags/%E7%8E%B0%E4%BB%A3%E8%AF%97/"/>
    
  </entry>
  
  <entry>
    <title>年少的诗-67-不过生活</title>
    <link href="http://yoursite.com/2017/08/11/%E5%B9%B4%E5%B0%91%E7%9A%84%E8%AF%97-67-%E4%B8%8D%E8%BF%87%E7%94%9F%E6%B4%BB/"/>
    <id>http://yoursite.com/2017/08/11/年少的诗-67-不过生活/</id>
    <published>2017-08-11T11:34:18.000Z</published>
    <updated>2018-02-11T12:06:10.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="不过生活"><a href="#不过生活" class="headerlink" title="不过生活"></a>不过生活</h2><p>人们说<br>平平仄仄音韵甚是好听<br>唱念婉转<br>说不清道不明</p><p>终抵不过<br>冷风灌入胸膛<br>入骨酥<br>梦里已然为客<br>落寞不过<br>醒后风干如泪<br>萧索</p><p>颤抖着<br>尚未平静的心<br>想要抓住的影子<br>也风蚀得点点成絮<br>总有那么一只旧木箱<br>黯淡角落下<br>尘封着悲欢</p><p>最无力不过<br>日渐模糊的残影<br>日趋平淡的生活<br>日益麻木的<br>你</p><p>————————————————</p><p>夙彧 2017.8.11</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;不过生活&quot;&gt;&lt;a href=&quot;#不过生活&quot; class=&quot;headerlink&quot; title=&quot;不过生活&quot;&gt;&lt;/a&gt;不过生活&lt;/h2&gt;&lt;p&gt;人们说&lt;br&gt;平平仄仄音韵甚是好听&lt;br&gt;唱念婉转&lt;br&gt;说不清道不明&lt;/p&gt;
&lt;p&gt;终抵不过&lt;br&gt;冷风灌入胸膛&lt;br&gt;入
      
    
    </summary>
    
    
      <category term="现代诗" scheme="http://yoursite.com/tags/%E7%8E%B0%E4%BB%A3%E8%AF%97/"/>
    
  </entry>
  
  <entry>
    <title>年少的诗-66-夜曲</title>
    <link href="http://yoursite.com/2017/05/27/%E5%B9%B4%E5%B0%91%E7%9A%84%E8%AF%97-66-%E5%A4%9C%E6%9B%B2/"/>
    <id>http://yoursite.com/2017/05/27/年少的诗-66-夜曲/</id>
    <published>2017-05-27T11:32:04.000Z</published>
    <updated>2018-02-11T12:06:06.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="夜曲"><a href="#夜曲" class="headerlink" title="夜曲"></a>夜曲</h2><p>人呐<br>总有些时候<br>需要一些悲情色彩<br>个人英雄主义<br>配上史诗般庄严的bgm<br>单曲循环下<br>触发那个危险的潘多拉<br>无关现实纷扰琐碎<br>仿佛自己就是整个世界<br>只有这个时候<br>才能卸下面具、重整盔甲<br>肆意随心指点江山<br>看日出日落、观潮涨月圆<br>一颗大义凛然、铁骨铮铮的心啊<br>在呼啸的冽风中<br>愈发苍凉、悲壮<br>也只有这个时候<br>纵容自己慢慢深陷<br>编织的梦境里、一点又一点</p><p>你看啊<br>前方又是一条喷着炽热火焰的巨龙<br>战斗吧！我的骑士。<br>在剑刃寒光下<br>再一次、再一次地<br>开启你的使命吧！</p><p>————————————————</p><p>夙彧 2017.5.27</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;夜曲&quot;&gt;&lt;a href=&quot;#夜曲&quot; class=&quot;headerlink&quot; title=&quot;夜曲&quot;&gt;&lt;/a&gt;夜曲&lt;/h2&gt;&lt;p&gt;人呐&lt;br&gt;总有些时候&lt;br&gt;需要一些悲情色彩&lt;br&gt;个人英雄主义&lt;br&gt;配上史诗般庄严的bgm&lt;br&gt;单曲循环下&lt;br&gt;触发那个危险的潘多
      
    
    </summary>
    
    
      <category term="现代诗" scheme="http://yoursite.com/tags/%E7%8E%B0%E4%BB%A3%E8%AF%97/"/>
    
  </entry>
  
  <entry>
    <title>年少的诗-65-听雨</title>
    <link href="http://yoursite.com/2017/03/07/%E5%B9%B4%E5%B0%91%E7%9A%84%E8%AF%97-65-%E5%90%AC%E9%9B%A8/"/>
    <id>http://yoursite.com/2017/03/07/年少的诗-65-听雨/</id>
    <published>2017-03-07T11:30:48.000Z</published>
    <updated>2018-02-11T12:05:56.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="听雨"><a href="#听雨" class="headerlink" title="听雨"></a>听雨</h2><p>明年是否<br>还会有你<br>和那片樱花雨<br>淅淅沥沥<br>萧萧索索<br>蓦然回首留意<br>整片氤氲<br>世间仿佛只剩下你<br>樱花零落纷纷然<br>宛如幻境<br>包围在其中的你啊<br>温香软玉<br>恍若仙女<br>你轻倚树干听花雨<br>定格在那一瞬<br>花瓣恰好挡住了<br>你红肿而酸涩的眼</p><p>明年是否还会有<br>樱花树下的你<br>有调皮的花瓣<br>藏住你倔强的泪滴</p><p>————————————————</p><p>夙彧 2017.3.7</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;听雨&quot;&gt;&lt;a href=&quot;#听雨&quot; class=&quot;headerlink&quot; title=&quot;听雨&quot;&gt;&lt;/a&gt;听雨&lt;/h2&gt;&lt;p&gt;明年是否&lt;br&gt;还会有你&lt;br&gt;和那片樱花雨&lt;br&gt;淅淅沥沥&lt;br&gt;萧萧索索&lt;br&gt;蓦然回首留意&lt;br&gt;整片氤氲&lt;br&gt;世间仿佛只剩下你&lt;b
      
    
    </summary>
    
    
      <category term="现代诗" scheme="http://yoursite.com/tags/%E7%8E%B0%E4%BB%A3%E8%AF%97/"/>
    
  </entry>
  
  <entry>
    <title>年少的诗-64-离</title>
    <link href="http://yoursite.com/2017/02/18/%E5%B9%B4%E5%B0%91%E7%9A%84%E8%AF%97-64-%E7%A6%BB/"/>
    <id>http://yoursite.com/2017/02/18/年少的诗-64-离/</id>
    <published>2017-02-18T11:28:43.000Z</published>
    <updated>2018-02-11T12:05:50.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="离"><a href="#离" class="headerlink" title="离"></a>离</h2><h4 id="——家以外的地方，都叫做流浪"><a href="#——家以外的地方，都叫做流浪" class="headerlink" title="——家以外的地方，都叫做流浪"></a>——家以外的地方，都叫做流浪</h4><p>这一次离开西宁<br>竟与上一次迥然相异<br>缓缓摩挲每一处<br>这个被称为家的地方<br>眸里凝注、游走<br>游走、又不忍凝注<br>本想在这里<br>仅有的几分钟之际<br>再流连于旧物<br>和旧梦重温<br>谁知眼里的流彩却逐渐褪色<br>呆滞、茫然<br>只觉心里、眼里<br>有如<br>磐石重压、厚绳捆缚<br>说不出话、也流不下泪<br>已然没有了思绪<br>却只感沉重与压抑</p><p>再茫然一扫<br>这被称为家的地方<br>没有了上一次的<br>踌躇满志、欣喜若狂<br>少年意气与狂态<br>竟在短短几个月消散殆尽<br>只换来这副<br>狼狈的皮囊</p><p>这是叫做乡愁么<br>就是余光中先生诗里的乡愁啊<br>或是都怪<br>这没来由的多愁善感<br>只把一点点小情绪<br>引得泪腺失守<br>有时候真的痛恨<br>过剩的伤感<br>让再坚硬的铠甲也不堪一击</p><p>下一次啊<br>下一次再摩挲<br>这被称为家的地方<br>美好的事物<br>总是一瞬即逝</p><p>家以外的地方<br>都叫做流浪</p><p>未老莫还乡<br>还乡须断肠</p><p>————————————————</p><p>夙彧 2017.2.18</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;离&quot;&gt;&lt;a href=&quot;#离&quot; class=&quot;headerlink&quot; title=&quot;离&quot;&gt;&lt;/a&gt;离&lt;/h2&gt;&lt;h4 id=&quot;——家以外的地方，都叫做流浪&quot;&gt;&lt;a href=&quot;#——家以外的地方，都叫做流浪&quot; class=&quot;headerlink&quot; title=&quot;—
      
    
    </summary>
    
    
      <category term="现代诗" scheme="http://yoursite.com/tags/%E7%8E%B0%E4%BB%A3%E8%AF%97/"/>
    
  </entry>
  
  <entry>
    <title>年少的诗-63-你</title>
    <link href="http://yoursite.com/2017/02/05/%E5%B9%B4%E5%B0%91%E7%9A%84%E8%AF%97-63-%E4%BD%A0/"/>
    <id>http://yoursite.com/2017/02/05/年少的诗-63-你/</id>
    <published>2017-02-05T11:27:11.000Z</published>
    <updated>2018-02-11T12:05:42.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="你"><a href="#你" class="headerlink" title="你"></a>你</h2><p>倦客天涯<br>天地为衣<br>那一刻开始<br>叫做流浪</p><p>再多一眼<br>再多一念<br>再多一点<br>盛夏的五瓣丁香<br>归途的厚重信笺<br>青涩的婆娑泪眼</p><p>你的脸开始模糊<br>风蚀得只剩点点<br>那些梦的碎片<br>再也拼不成一幅<br>熟悉的眷恋</p><p>可是掌心的温度<br>唇上的纹路<br>怀抱里说不清的<br>你的味道<br>却是那样的真实萌动<br>好似镜花水月<br>一场空</p><p>路未满 夜无垠<br>点一盏荷花灯<br>拨几根琴弦<br>音韵诉离殇<br>点破静水波澜<br>涟漪荡漾着<br>把你推向远方<br>直到水天相接<br>看漫天孔明</p><p>孰为孰痴<br>步亦趋<br>共朝暮</p><p>————————————————</p><p>夙彧 2017.2.5</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;你&quot;&gt;&lt;a href=&quot;#你&quot; class=&quot;headerlink&quot; title=&quot;你&quot;&gt;&lt;/a&gt;你&lt;/h2&gt;&lt;p&gt;倦客天涯&lt;br&gt;天地为衣&lt;br&gt;那一刻开始&lt;br&gt;叫做流浪&lt;/p&gt;
&lt;p&gt;再多一眼&lt;br&gt;再多一念&lt;br&gt;再多一点&lt;br&gt;盛夏的五瓣丁香&lt;br&gt;归途
      
    
    </summary>
    
    
      <category term="现代诗" scheme="http://yoursite.com/tags/%E7%8E%B0%E4%BB%A3%E8%AF%97/"/>
    
  </entry>
  
  <entry>
    <title>年少的诗-62</title>
    <link href="http://yoursite.com/2016/10/26/%E5%B9%B4%E5%B0%91%E7%9A%84%E8%AF%97-62/"/>
    <id>http://yoursite.com/2016/10/26/年少的诗-62/</id>
    <published>2016-10-26T11:08:17.000Z</published>
    <updated>2018-02-11T12:28:50.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://chuantu.biz/t6/226/1518352097x-1566638243.jpg" alt="诗歌"></p><p>就像候鸟和故地</p><p>秋叶泛黄了就离开</p><p>离开了就再也不会来</p><p>就像午时三刻的雨</p><p>平淡不过晨钟暮鼓</p><p>鼓声尽 青烟带不走无言愁绪</p><p>就像蕉窗夜雨</p><p>清冷了一整个夏夜的梦</p><p>大梦醒 人去楼已空</p><p>暗香浮动 黄昏映冷月</p><p>桥边花落 疏影和桂香</p><p>千觞尽 君知否</p><p>酿可浓如酒</p><p>————————————————</p><p>夙彧 2016.10.26</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;http://chuantu.biz/t6/226/1518352097x-1566638243.jpg&quot; alt=&quot;诗歌&quot;&gt;&lt;/p&gt;
&lt;p&gt;就像候鸟和故地&lt;/p&gt;
&lt;p&gt;秋叶泛黄了就离开&lt;/p&gt;
&lt;p&gt;离开了就再也不会来&lt;/p&gt;
&lt;p&gt;就像午时三刻的雨
      
    
    </summary>
    
    
      <category term="现代诗" scheme="http://yoursite.com/tags/%E7%8E%B0%E4%BB%A3%E8%AF%97/"/>
    
  </entry>
  
  <entry>
    <title>年少的诗-61-忆江南</title>
    <link href="http://yoursite.com/2016/10/06/%E5%B9%B4%E5%B0%91%E7%9A%84%E8%AF%97-61-%E5%BF%86%E6%B1%9F%E5%8D%97/"/>
    <id>http://yoursite.com/2016/10/06/年少的诗-61-忆江南/</id>
    <published>2016-10-06T11:04:59.000Z</published>
    <updated>2018-02-11T12:27:44.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://chuantu.biz/t6/226/1518352037x-1566638243.jpg" alt="忆江南"></p><h2 id="忆江南"><a href="#忆江南" class="headerlink" title="忆江南"></a>忆江南</h2><p>凉秋夜，月桂漫深窗。</p><p>盏酒朦朦香雨巷，扶摇点素霜。</p><p>印象画荷塘。</p><p>————————————————</p><p>夙彧 2016.10.6</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;http://chuantu.biz/t6/226/1518352037x-1566638243.jpg&quot; alt=&quot;忆江南&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;忆江南&quot;&gt;&lt;a href=&quot;#忆江南&quot; class=&quot;headerlink&quot; title=&quot;忆江南&quot;
      
    
    </summary>
    
    
      <category term="古体诗" scheme="http://yoursite.com/tags/%E5%8F%A4%E4%BD%93%E8%AF%97/"/>
    
  </entry>
  
</feed>
